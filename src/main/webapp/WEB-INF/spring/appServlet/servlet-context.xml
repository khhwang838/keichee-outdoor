<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd	">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/views/**" location="/WEB-INF/views/" />
	<mvc:resources mapping="/images/**" location="/WEB-INF/images/" />
	<mvc:resources mapping="/libs/**" location="/WEB-INF/libs/" />
	<mvc:resources mapping="/js/**" location="/WEB-INF/scripts/" />
	<mvc:resources mapping="/css/**" location="/WEB-INF/styles/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 다국어 처리를 위한 메시지소스 설정 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">

		<property name="defaultEncoding" value="UTF-8"/>
		<property name="basenames">
			<list>
				<value>/WEB-INF/localization/message</value>
			</list>
		</property>
	</bean>
	<bean id="cookieResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en"/>
        <property name="cookieName" value="mustoutdoor_locale"/>
        <property name="cookieMaxAge" value="3600"/>
    </bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>
    
	<context:component-scan base-package="com.keichee.mustoutdoor" />
	
	<tx:annotation-driven proxy-target-class="true" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" /> <!-- 모든 URL 에 대해 Interceptor 를 적용하고자 한다면 /** -->
			<mvc:exclude-mapping path="*" />
			<mvc:exclude-mapping path="/" />
			<mvc:exclude-mapping path="/login" />
			<mvc:exclude-mapping path="/resources/**" />
			<mvc:exclude-mapping path="/externals/**" />
			<mvc:exclude-mapping path="/images/**" />
			<mvc:exclude-mapping path="/libs/**" />
			<mvc:exclude-mapping path="/js/**" />
			<mvc:exclude-mapping path="/css/**" />
			<bean class="com.keichee.mustoutdoor.core.HttpRequestInterceptor" /> <!-- HandlerInterceptor 인터페이스를 구현한 클래스 -->
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- MultipartResolver 설정 : 첨부파일 최대크기 10MB -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="maxInMemorySize" value="100000000" />
	</bean>

	<context:property-placeholder location="file:\kihyun\git\keichee-outdoor\src\main\resources\mustoutdoor.config" />
	<!-- 데이터 소스 설정 시작 -->
	<!-- 암복화 모듈 -->
    <bean id="jdbcConfig" class="com.keichee.mustoutdoor.component.JdbcConfig">
    	<property name="useCrypt"      value="${mustoutdoor.postgresql.jdbc.crypt}" />
        <property name="decUrl"        value="${mustoutdoor.postgresql.jdbc.url}" />
        <property name="decUsername"   value="${mustoutdoor.postgresql.jdbc.username}" />
        <property name="decPassword"   value="${mustoutdoor.postgresql.jdbc.password}" />
    </bean>
    
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="#{jdbcConfig.decUrl}"/>
        <property name="username" value="#{jdbcConfig.decUsername}"/>
        <property name="password" value="#{jdbcConfig.decPassword}"/>
		<property name="initialSize" value="${mustoutdoor.postgresql.jdbc.initialSize}" />
		<property name="maxActive"   value="${mustoutdoor.postgresql.jdbc.maxActive}" />
		<property name="maxIdle"     value="${mustoutdoor.postgresql.jdbc.maxIdle}" />
		<property name="minIdle"     value="${mustoutdoor.postgresql.jdbc.minIdle}" />
		<property name="testWhileIdle"     value="${mustoutdoor.postgresql.testWhileIdle}" />
		<property name="validationQuery"     value="${mustoutdoor.postgresql.validationQuery}" />
		<property name="timeBetweenEvictionRunsMillis"     value="${mustoutdoor.postgresql.timeBetweenEvictionRunsMillis}" />
	</bean>

	<!-- mybatis setting -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.keichee.mustoutdoor" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/keichee/mustoutdoor/**/dao/xml/*.xml" />
	</bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
</beans>
